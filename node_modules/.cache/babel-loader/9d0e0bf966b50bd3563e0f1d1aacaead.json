{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"{\\n  viewer {\\n    reporsitories(\\n      first: 5\\n      orderBy: { direction: DESC, field: STARGAZERS }\\n    ) {\\n      edges {\\n        node {\\n          id\\n          name\\n          url\\n          descriptionHTML\\n          primaryLanguage {\\n            name\\n          }\\n          owner {\\n            login\\n            url\\n          }\\n          stargazers {\\n            totalCount\\n          }\\n          viewerHasStarred\\n          watchers {\\n            totalCount\\n          }\\n          viewerSubscription\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Loading from '../Loading';\nimport RepositoryList from '../Repository';\nvar GET_CURRENT_USER = gql(_templateObject());\n\nvar Profile = function Profile() {\n  return React.createElement(Query, {\n    query: GET_CURRENT_USER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading;\n    var viewer = data.viewer;\n\n    if (loading || !viewer) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(RepositoryList, {\n      repositories: viewer.repositories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js"],"names":["React","gql","Query","Loading","RepositoryList","GET_CURRENT_USER","Profile","data","loading","viewer","repositories"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;;AAkCA,IAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAuB;AAAA,QAApBE,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAAA,QACdC,MADc,GACHF,IADG,CACdE,MADc;;AAGtB,QAAID,OAAO,IAAI,CAACC,MAAhB,EAAwB;AAAE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAoB;;AAE9C,WAAO,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAEA,MAAM,CAACC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAPH,CADc;AAAA,CAAhB;;AAYA,eAAeJ,OAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nimport Loading from '../Loading'\nimport RepositoryList from '../Repository'\n\nconst GET_CURRENT_USER = gql`{\n  viewer {\n    reporsitories(\n      first: 5\n      orderBy: { direction: DESC, field: STARGAZERS }\n    ) {\n      edges {\n        node {\n          id\n          name\n          url\n          descriptionHTML\n          primaryLanguage {\n            name\n          }\n          owner {\n            login\n            url\n          }\n          stargazers {\n            totalCount\n          }\n          viewerHasStarred\n          watchers {\n            totalCount\n          }\n          viewerSubscription\n        }\n      }\n    }\n  }\n}\n`\n\nconst Profile = () => (\n  <Query query={GET_CURRENT_USER}>\n    {({ data, loading }) => {\n      const { viewer } = data\n\n      if (loading || !viewer) { return <Loading /> }\n\n      return <RepositoryList repositories={viewer.repositories} />\n    }}\n  </Query>\n);\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}