{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    viewer {\\n      login\\n      name\\n      reporistories(\\n        first: 5\\n        orderBy: { direction: DECS, field: STARGAZERS }\\n      ) {\\n        edges {\\n          node {\\n            id\\n            name\\n            url\\n            descriptionHTML\\n            primaryLanguage {\\n              name\\n            }\\n            owner {\\n              login\\n              url\\n            }\\n            stargazers {\\n              totalCount\\n            }\\n            viewerHasStarred\\n            watchers {\\n              totalCount\\n            }\\n            viewerSubscription\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Loading from '../Loading';\nvar GET_CURRENT_USER = gql(_templateObject());\n\nvar Profile = function Profile() {\n  return React.createElement(Query, {\n    query: GET_CURRENT_USER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading;\n    var viewer = data.viewer;\n\n    if (loading || !viewer) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, viewer.name, \" \", viewer.login);\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js"],"names":["React","gql","Query","Loading","GET_CURRENT_USER","Profile","data","loading","viewer","name","login"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,gBAAgB,GAAGH,GAAH,mBAAtB;;AAqCA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAuB;AAAA,QAApBE,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAAA,QACdC,MADc,GACHF,IADG,CACdE,MADc;;AAGtB,QAAID,OAAO,IAAI,CAACC,MAAhB,EAAwB;AAAE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAqB;;AAE/C,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,CAACC,IADV,OACiBD,MAAM,CAACE,KADxB,CADF;AAKD,GAXH,CADc;AAAA,CAAhB;;AAgBA,eAAeL,OAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nimport Loading from '../Loading'\n\nconst GET_CURRENT_USER = gql`\n  {\n    viewer {\n      login\n      name\n      reporistories(\n        first: 5\n        orderBy: { direction: DECS, field: STARGAZERS }\n      ) {\n        edges {\n          node {\n            id\n            name\n            url\n            descriptionHTML\n            primaryLanguage {\n              name\n            }\n            owner {\n              login\n              url\n            }\n            stargazers {\n              totalCount\n            }\n            viewerHasStarred\n            watchers {\n              totalCount\n            }\n            viewerSubscription\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Profile = () => (\n  <Query query={GET_CURRENT_USER}>\n    {({ data, loading }) => {\n      const { viewer } = data;\n\n      if (loading || !viewer) { return <Loading />; }\n\n      return (\n        <div>\n          {viewer.name} {viewer.login}\n        </div>\n      );\n    }}\n  </Query>\n);\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}