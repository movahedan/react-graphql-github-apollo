{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    viewer {\\n      repositories(\\n        first: 5\\n        orderBy: { field: STARGAZERS, direction: DESC }\\n      ) {\\n        edges {\\n          node {\\n            ...repository\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo'; // import { graphql } from 'react-apollo'\n\nimport Loading from '../Loading';\nimport RepositoryList, { REPOSITORY_FRAGMENT } from '../Repository';\nimport ErrorMessage from '../Error';\nvar GET_CURRENT_USER = gql(_templateObject(), REPOSITORY_FRAGMENT);\n\nvar Profile = function Profile() {\n  return React.createElement(Query, {\n    query: GET_CURRENT_USER,\n    errorPolicy: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n\n    if (error) {\n      return React.createElement(ErrorMessage, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n\n    var viewer = data.viewer;\n\n    if (loading || !viewer) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(RepositoryList, {\n      repositories: viewer.repositories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  });\n}; // const Profile = ({ data, loading, error }) => {\n//   if (error) {\n//     return <ErrorMessage error={error} />;\n//   }\n//   const { viewer } = data;\n//   if (loading || !viewer) {\n//     return <Loading />;\n//   }\n//   return <RepositoryList repositories={viewer.repositories} />;\n// };\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js"],"names":["React","gql","Query","Loading","RepositoryList","REPOSITORY_FRAGMENT","ErrorMessage","GET_CURRENT_USER","Profile","data","loading","error","viewer","repositories"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB,C,CACA;;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,IAAyBC,mBAAzB,QAAoD,eAApD;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,IAAMC,gBAAgB,GAAGN,GAAH,oBAgBlBI,mBAhBkB,CAAtB;;AAmBA,IAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,gBAAd;AAAgC,IAAA,WAAW,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AAC7B,QAAIA,KAAJ,EAAW;AAAE,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAuC;;AADvB,QAGrBC,MAHqB,GAGVH,IAHU,CAGrBG,MAHqB;;AAK7B,QAAIF,OAAO,IAAI,CAACE,MAAhB,EAAwB;AAAE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAoB;;AAE9C,WAAO,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAEA,MAAM,CAACC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GATH,CADc;AAAA,CAAhB,C,CAcA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeL,OAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n// import { graphql } from 'react-apollo'\n\nimport Loading from '../Loading'\nimport RepositoryList, { REPOSITORY_FRAGMENT } from '../Repository'\nimport ErrorMessage from '../Error'\n\nconst GET_CURRENT_USER = gql`\n  {\n    viewer {\n      repositories(\n        first: 5\n        orderBy: { field: STARGAZERS, direction: DESC }\n      ) {\n        edges {\n          node {\n            ...repository\n          }\n        }\n      }\n    }\n  }\n\n  ${REPOSITORY_FRAGMENT}\n`\n\nconst Profile = () => (\n  <Query query={GET_CURRENT_USER} errorPolicy=\"all\">\n    {({ data, loading, error }) => {\n      if (error) { return <ErrorMessage error={error} /> }\n\n      const { viewer } = data\n      \n      if (loading || !viewer) { return <Loading /> }\n\n      return <RepositoryList repositories={viewer.repositories} />\n    }}\n  </Query>\n);\n\n// const Profile = ({ data, loading, error }) => {\n//   if (error) {\n//     return <ErrorMessage error={error} />;\n//   }\n\n//   const { viewer } = data;\n\n//   if (loading || !viewer) {\n//     return <Loading />;\n//   }\n\n//   return <RepositoryList repositories={viewer.repositories} />;\n// };\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}