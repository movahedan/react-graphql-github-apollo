{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  viewer {\\n    repositories(\\n      first: 5\\n      orderBy: { field: STARGAZERS, direction: DESC }\\n    ) {\\n      edges {\\n        node {\\n          id\\n          name\\n          url\\n          descriptionHTML\\n          primaryLanguage {\\n            name\\n          }\\n          owner {\\n            login\\n            url\\n          }\\n          stargazers {\\n            totalCount\\n          }\\n          viewerHasStarred\\n          watchers {\\n            totalCount\\n          }\\n          viewerSubscription\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag'; // import { Query } from 'react-apollo'\n\nimport { graphql } from 'react-apollo';\nimport Loading from '../Loading';\nimport RepositoryList from '../Repository';\nimport ErrorMessage from '../Error';\nvar GET_CURRENT_USER = gql(_templateObject()); // const Profile = () => (\n//   <Query query={GET_CURRENT_USER} errorPolicy=\"all\">\n//     {({ data, loading, error }) => {\n//       if (error) { return <ErrorMessage error={error} /> }\n//       const { viewer } = data\n//       if (loading || !viewer) { return <Loading /> }\n//       return <RepositoryList repositories={viewer.repositories} />\n//     }}\n//   </Query>\n// );\n\nvar Profile = function Profile(_ref) {\n  var data = _ref.data,\n      loading = _ref.loading,\n      error = _ref.error;\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }\n\n  var viewer = data.viewer;\n\n  if (loading || !viewer) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(RepositoryList, {\n    repositories: viewer.repositories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  });\n};\n\nexport default graphql(GET_CURRENT_USER)(Profile);","map":{"version":3,"sources":["/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Profile/index.js"],"names":["React","gql","graphql","Loading","RepositoryList","ErrorMessage","GET_CURRENT_USER","Profile","data","loading","error","viewer","repositories"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,IAAMC,gBAAgB,GAAGL,GAAH,mBAAtB,C,CAmCA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAMM,OAAO,GAAG,SAAVA,OAAU,OAA8B;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC5C,MAAIA,KAAJ,EAAW;AACT,WAAO,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAH2C,MAKpCC,MALoC,GAKzBH,IALyB,CAKpCG,MALoC;;AAO5C,MAAIF,OAAO,IAAI,CAACE,MAAhB,EAAwB;AACtB,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,oBAAC,cAAD;AAAgB,IAAA,YAAY,EAAEA,MAAM,CAACC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAZD;;AAcA,eAAeV,OAAO,CAACI,gBAAD,CAAP,CAA0BC,OAA1B,CAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag'\n// import { Query } from 'react-apollo'\nimport { graphql } from 'react-apollo'\n\nimport Loading from '../Loading'\nimport RepositoryList from '../Repository'\nimport ErrorMessage from '../Error'\n\nconst GET_CURRENT_USER = gql`\n{\n  viewer {\n    repositories(\n      first: 5\n      orderBy: { field: STARGAZERS, direction: DESC }\n    ) {\n      edges {\n        node {\n          id\n          name\n          url\n          descriptionHTML\n          primaryLanguage {\n            name\n          }\n          owner {\n            login\n            url\n          }\n          stargazers {\n            totalCount\n          }\n          viewerHasStarred\n          watchers {\n            totalCount\n          }\n          viewerSubscription\n        }\n      }\n    }\n  }\n}\n`\n\n// const Profile = () => (\n//   <Query query={GET_CURRENT_USER} errorPolicy=\"all\">\n//     {({ data, loading, error }) => {\n//       if (error) { return <ErrorMessage error={error} /> }\n\n//       const { viewer } = data\n      \n//       if (loading || !viewer) { return <Loading /> }\n\n//       return <RepositoryList repositories={viewer.repositories} />\n//     }}\n//   </Query>\n// );\n\nconst Profile = ({ data, loading, error }) => {\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const { viewer } = data;\n\n  if (loading || !viewer) {\n    return <Loading />;\n  }\n\n  return <RepositoryList repositories={viewer.repositories} />;\n};\n\nexport default graphql(GET_CURRENT_USER)(Profile);"]},"metadata":{},"sourceType":"module"}