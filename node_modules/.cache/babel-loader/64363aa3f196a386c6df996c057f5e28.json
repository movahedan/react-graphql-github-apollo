{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Repository/RepositoryItem/index.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!) {\\n    updateSubscription(input: { starrableId: $id }) {\\n      subscribable {\\n        id\\n        viewerSubscription\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!) {\\n    removeStar(input: { starrableId: $id }) {\\n      starrable {\\n        id\\n        viewerHasStarred\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!) {\\n    addStar(input: { starrableId: $id }) {\\n      starrable {\\n        id\\n        viewerHasStarred\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport Link from '../../Link';\nimport Button from '../../Button';\nimport '../style.css';\nvar STAR_REPOSITORY = gql(_templateObject());\nvar UNSTAR_REPOSITORY = gql(_templateObject2());\nvar WATCH_REPOSITORY = gql(_templateObject3());\n\nvar RepositoryItem = function RepositoryItem(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      url = _ref.url,\n      descriptionHTML = _ref.descriptionHTML,\n      primaryLanguage = _ref.primaryLanguage,\n      owner = _ref.owner,\n      stargazers = _ref.stargazers,\n      watchers = _ref.watchers,\n      viewerSubscription = _ref.viewerSubscription,\n      viewerHasStarred = _ref.viewerHasStarred;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"RepositoryItem-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, name)), React.createElement(\"div\", {\n    className: \"RepositoryItem-title-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, stargazers.totalCount, \" Stars\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, !viewerHasStarred ? React.createElement(Mutation, {\n    mutation: STAR_REPOSITORY,\n    variables: {\n      id: id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, function (addStar, _ref2) {\n    var data = _ref2.data,\n        loading = _ref2.loading,\n        error = _ref2.error;\n    return React.createElement(Button, {\n      className: 'RepositoryItem-title-action',\n      onClick: addStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, stargazers.totalCount, \" Star\");\n  }) : React.createElement(Mutation, {\n    mutation: NONSTAR_REPOSITORY,\n    variables: {\n      id: id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, function (removeStar, _ref3) {\n    var data = _ref3.data,\n        loading = _ref3.loading,\n        error = _ref3.error;\n    return React.createElement(Button, {\n      className: 'RepositoryItem-title-action',\n      onClick: removeStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, stargazers.totalCount, \" Unstar\");\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, !viewerSubscription ? React.createElement(Mutation, {\n    mutation: WATCH_REPOSITORY,\n    variables: {\n      id: id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, function (updateSubscription, _ref4) {\n    var data = _ref4.data,\n        loading = _ref4.loading,\n        error = _ref4.error;\n    return React.createElement(Button, {\n      className: 'RepositoryItem-title-action',\n      onClick: updateSubscription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, watchers.totalCount, \" Watchers\");\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"yooooooohaha\")), React.createElement(\"div\", {\n    className: \"RepositoryItem-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"RepositoryItem-description-info\",\n    dangerouslySetInnerHTML: {\n      __html: descriptionHTML\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"RepositoryItem-description-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, primaryLanguage && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Language: \", primaryLanguage.name)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, owner && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Owner: \", React.createElement(\"a\", {\n    href: owner.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, owner.login))))));\n};\n\nexport default RepositoryItem;","map":{"version":3,"sources":["/home/smp/workspace/practice-project/react-graphql-github-apollo-starter-kit/src/Repository/RepositoryItem/index.js"],"names":["React","gql","Mutation","Link","Button","STAR_REPOSITORY","UNSTAR_REPOSITORY","WATCH_REPOSITORY","RepositoryItem","id","name","url","descriptionHTML","primaryLanguage","owner","stargazers","watchers","viewerSubscription","viewerHasStarred","totalCount","addStar","data","loading","error","NONSTAR_REPOSITORY","removeStar","updateSubscription","__html","login"],"mappings":"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","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag'\nimport { Mutation } from 'react-apollo'\n\nimport Link from '../../Link'\nimport Button from '../../Button'\n\nimport '../style.css';\n\nconst STAR_REPOSITORY = gql`\n  mutation($id: ID!) {\n    addStar(input: { starrableId: $id }) {\n      starrable {\n        id\n        viewerHasStarred\n      }\n    }\n  }\n`\n\nconst UNSTAR_REPOSITORY = gql`\n  mutation($id: ID!) {\n    removeStar(input: { starrableId: $id }) {\n      starrable {\n        id\n        viewerHasStarred\n      }\n    }\n  }\n`\n\nconst WATCH_REPOSITORY = gql`\n  mutation($id: ID!) {\n    updateSubscription(input: { starrableId: $id }) {\n      subscribable {\n        id\n        viewerSubscription\n      }\n    }\n  }\n`\n\nconst RepositoryItem = ({\n  id,\n  name,\n  url,\n  descriptionHTML,\n  primaryLanguage,\n  owner,\n  stargazers,\n  watchers,\n  viewerSubscription,\n  viewerHasStarred,\n}) => (\n  <div>\n    <div className=\"RepositoryItem-title\">\n      <h2>\n        <Link href={url}>{name}</Link>\n      </h2>\n\n      <div className=\"RepositoryItem-title-action\">\n        {stargazers.totalCount} Stars\n      </div>\n    </div>\n\n    <div>\n      {!viewerHasStarred ? (\n        <Mutation mutation={STAR_REPOSITORY} variables={{ id }}>\n          {(addStar, { data, loading, error }) => (\n            <Button\n              className={'RepositoryItem-title-action'}\n              onClick={addStar}\n            >\n              {stargazers.totalCount} Star\n            </Button>\n          )}\n        </Mutation>\n      ) : ( \n        <Mutation mutation={NONSTAR_REPOSITORY} variables={{ id }}>\n          {(removeStar, { data, loading, error }) => (\n            <Button\n              className={'RepositoryItem-title-action'}\n              onClick={removeStar}\n            >\n              {stargazers.totalCount} Unstar\n            </Button>\n          )}\n        </Mutation>\n      )}\n    </div>\n    \n    <div>\n      {!viewerSubscription ? (\n        <Mutation mutation={WATCH_REPOSITORY} variables={{ id }}>\n          {(updateSubscription, { data, loading, error }) => (\n            <Button\n              className={'RepositoryItem-title-action'}\n              onClick={updateSubscription}\n            >\n              {watchers.totalCount} Watchers\n            </Button>\n          )}\n        </Mutation>\n      ): (\n        <p>yooooooohaha</p>\n      )}\n    </div>\n\n    <div className=\"RepositoryItem-description\">\n      <div\n        className=\"RepositoryItem-description-info\"\n        dangerouslySetInnerHTML={{ __html: descriptionHTML }}\n      />\n      <div className=\"RepositoryItem-description-details\">\n        <div>\n          {primaryLanguage && (\n            <span>Language: {primaryLanguage.name}</span>\n          )}\n        </div>\n        <div>\n          {owner && (\n            <span>\n              Owner: <a href={owner.url}>{owner.login}</a>\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default RepositoryItem"]},"metadata":{},"sourceType":"module"}